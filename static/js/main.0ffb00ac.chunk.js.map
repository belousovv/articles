{"version":3,"sources":["components/Logo/Logo.tsx","components/Nav/Nav.tsx","components/Header/Header.tsx","api/api.ts","api/posts-api.ts","redux/homePage-reducer.ts","components/Modal/Modal.tsx","components/ArticleItem/ArticleItem.tsx","components/ArticleItems/ArticleItems.tsx","components/Button/Button.tsx","components/NewArticle/NewArticle.tsx","redux/homePage-selectors.ts","pages/HomePage/HomePage.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["Logo","className","Nav","to","activeClassName","Header","instance","axios","create","baseURL","postsApi","get","then","resp","data","initialState","posts","postsPerRow","POSTS_RECEIVED","POSTS_PER_ROW_CHANGED","POST_ADDED","actions","type","payload","homePageReducer","state","action","Modal","isActive","setIsActive","children","onClick","e","stopPropagation","ArticleItem","title","text","post","useState","isInfoActive","setIsInfoActive","isColorActive","setIsColorActive","color","setColor","styles","maxWidth","backgroundColor","style","body","React","memo","ArticleItems","visible","dispatch","useDispatch","useEffect","a","mappedPosts","slice","map","p","id","gridTemplateColumns","Button","size","fontSize","NewArticle","tempTitle","setTempTitle","tempDescription","setTempDescription","setTitle","description","setDescription","userId","placeholder","value","onChange","currentTarget","selectPosts","home","selectPostsPerRow","HomePage","console","log","useSelector","scrollTarget","useRef","setVisible","showMoreActive","setShowMoreActive","isClicked","setIsClicked","current","scrollIntoView","behavior","prev","next","length","ref","App","exact","path","render","rootReducer","combineReducers","store","createStore","applyMiddleware","ThunkMiddleware","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"yXAWeA,EARQ,WACnB,OACI,qBAAKC,UAAU,OAAf,SACI,mBAAGA,UAAU,aAAb,+B,QCkCGC,G,MApCO,WACpB,OACE,qBAAKD,UAAU,MAAf,SACE,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,SACE,cAAC,IAAD,CACEA,UAAU,YACVE,GAAG,QACHC,gBAAgB,oBAHlB,oBAQF,oBAAIH,UAAU,YAAd,SACE,cAAC,IAAD,CACEA,UAAU,YACVE,GAAG,SACHC,gBAAgB,oBAHlB,qBAQF,oBAAIH,UAAU,YAAd,SACE,cAAC,IAAD,CACEA,UAAU,YACVE,GAAG,UACHC,gBAAgB,oBAHlB,6BCTKC,G,MAbU,WACvB,OACE,wBAAQJ,UAAU,SAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,a,gECTGK,E,OAAWC,EAAMC,OAAO,CACjCC,QAAS,0CCAAC,EACD,WACR,OAAOJ,EAASK,IAAqB,SAASC,MAAK,SAACC,GAAD,OAAUA,EAAKC,SCChEC,EAAiC,CACrCC,MAAO,GACPC,YAAa,GAKTC,EAAiB,mCACjBC,EAAwB,0CACxBC,EAAa,+BAINC,EACI,SAACL,GAAD,MACZ,CAAEM,KAAMJ,EAAgBF,UAFhBK,EAGS,iBAAO,CAAEC,KAAMH,IAHxBE,EAIA,SAACE,GAAD,MAAwB,CAAED,KAAMF,EAAYG,YAuC1CC,EAlCS,WAGA,IAFtBC,EAEqB,uDAFKV,EAC1BW,EACqB,uCACrB,OAAQA,EAAOJ,MACb,KAAKF,EACH,OAAO,2BACFK,GADL,IAEET,MAAM,GAAD,mBAAMS,EAAMT,OAAZ,CAAmBU,EAAOH,YAEjC,KAAKJ,EACH,OAAO,2BACFM,GADL,IAEER,YAAoC,IAAtBQ,EAAMR,YAAqB,EAAI,IAEjD,KAAKC,EACD,OAAO,2BACAO,GADP,IAEIT,MAAM,YAAKU,EAAOV,SAE5B,QACE,OAAOS,IC9BEE,G,MAhBoB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAC3D,OACE,qBACE7B,UAAS,gBAAW2B,GAAY,iBAChCG,QAAS,kBAAMF,GAAY,IAF7B,SAIE,qBACE5B,UAAS,yBAAoB2B,GAAY,0BACzCG,QAAS,SAACC,GAAD,OAAOA,EAAEC,mBAFpB,SAIGH,QCRHI,G,MAAmC,SAAC,GAKnC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,KACAnB,EAEI,EAFJA,YACAoB,EACI,EADJA,KACI,EACoCC,oBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,OAEsCF,oBAAS,GAF/C,mBAEGG,EAFH,KAEkBC,EAFlB,OAGsBJ,mBAAyC,QAH/D,mBAGGK,EAHH,KAGUC,EAHV,KAKEC,EAAS,CACbC,SAA0B,IAAhB7B,EAAoB,QAAU,OACxC8B,gBAAiBJ,GAGnB,OACE,sBAAK1C,UAAU,eAAe+C,MAAOH,EAArC,UACE,oBAAI5C,UAAU,sBAAd,SAAqCkC,IACrC,mBAAGlC,UAAU,qBAAb,SAAmCmC,IACnC,sBAAKnC,UAAU,wBAAf,UACE,wBACEA,UAAU,oBACV8B,QAAS,WACPS,GAAgB,IAHpB,kBAQA,wBACEvC,UAAU,oBACV8B,QAAS,WACPW,GAAiB,IAHrB,6BASF,cAAC,EAAD,CAAOd,SAAUW,EAAcV,YAAaW,EAA5C,SACE,sBAAKvC,UAAU,aAAf,UACE,oBAAIA,UAAU,oBAAd,0BACA,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,4BAAd,SAA2CoC,EAAKF,QAChD,mBAAGlC,UAAU,2BAAb,SAAyCoC,EAAKY,eAIpD,cAAC,EAAD,CAAOrB,SAAUa,EAAeZ,YAAaa,EAA7C,SACE,qBAAKzC,UAAU,cAAf,SACE,qBAAIA,UAAU,oBAAd,UACE,oBACEA,UAAU,4CACV8B,QAAS,WACPa,EAAS,SAHb,qBAQA,oBACE3C,UAAU,2CACV8B,QAAS,WACPa,EAAS,YAHb,iBAQA,oBACE3C,UAAU,6CACV8B,QAAS,WACPa,EAAS,YAHb,+BAeGM,MAAMC,KAAKjB,GC/EpBkB,G,MAAoC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASrC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACrDqC,EAAWC,cAEjBC,qBAAU,WACRF,EH8CF,uCAAO,WAAOA,GAAP,eAAAG,EAAA,sEACc/C,IADd,OACCG,EADD,OAELyC,EAASjC,EAAsBR,IAF1B,2CAAP,yDG5CG,IAEH,IAAM6C,EAAW,OAAG1C,QAAH,IAAGA,OAAH,EAAGA,EAChB2C,MAAM,EAAGN,GACVO,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAwBxB,KAAMwB,EAAG1B,MAAO0B,EAAE1B,MAAOC,KAAMyB,EAAEZ,KAAMhC,YAAaA,GAA1D4C,EAAEC,OAE5BjB,EAAS,CACbkB,oBAAoB,UAAD,OAAY9C,EAAZ,WAGrB,OAAO,qBACNhB,UAAU,gBACT+C,MAAOH,EAFF,SAGLa,MAGWR,MAAMC,KAAKC,GChBXY,G,MATqB,SAAC,GAAyB,IAAxB5B,EAAuB,EAAvBA,KAAuB,IAAjB6B,KAElCjB,EAAQ,CACVkB,cAHqD,MAAZ,OAAY,GAMzD,OAAO,wBAAQjE,UAAU,SAAS+C,MAAOA,EAAlC,SAA2CZ,MCyDvC+B,G,MA5DyB,SAAC,GAAmB,IAAlBtC,EAAiB,EAAjBA,YAElCyB,EAAWC,cAFwC,EAIvBjB,mBAAS,IAJc,mBAIlD8B,EAJkD,KAIvCC,EAJuC,OAKX/B,mBAAS,IALE,mBAKlDgC,EALkD,KAKjCC,EALiC,OAM/BjC,mBAAwB,MANO,mBAMlDH,EANkD,KAM3CqC,EAN2C,OAOnBlC,mBAAwB,MAPL,mBAOlDmC,EAPkD,KAOrCC,EAPqC,KAoCzD,OAdAlB,qBAAU,WACJrB,GAASsC,IAOXnB,EAASjC,EANc,CACrBsD,OAAQ,EACRb,GAAI,EACJ3B,MAAOA,EACPc,KAAMwB,KAGR5C,GAAY,MAGb,CAACM,EAAOsC,IAGT,qBAAKxE,UAAU,cAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,uBACEqB,KAAK,OACLrB,UAAU,qBACV2E,YAAY,QACZC,MAAOT,EACPU,SAnCmB,SAAC9C,GAC1BqC,EAAarC,EAAE+C,cAAcF,UAoCzB,0BACE5E,UAAU,oBACV2E,YAAY,cACZC,MAAOP,EACPQ,SAtCyB,SAC/B9C,GAEAuC,EAAmBvC,EAAE+C,cAAcF,UAqC/B,sBAAM5E,UAAU,sBAAsB8B,QAnCtB,WACpByC,EAASJ,GACTM,EAAeJ,IAiCX,SACE,cAAC,EAAD,CAAQlC,KAAK,SAAS6B,KAAK,kBCzDxBe,EAAc,SAACvD,GACxB,OAAOA,EAAMwD,KAAKjE,OAGTkE,EAAoB,SAACzD,GAC9B,OAAOA,EAAMwD,KAAKhE,aCgGPkE,G,MA7FY,WACzBC,QAAQC,IAAI,YAEZ,IAAMrE,EAAQsE,YAAYN,GACpB/D,EAAcqE,YAAYJ,GAE1B5B,EAAWC,cAEXgC,EAAeC,iBAAuB,MARb,EAUDlD,mBAAiBrB,GAVhB,mBAUxBoC,EAVwB,KAUfoC,EAVe,OAWanD,oBAAS,GAXtB,mBAWxBoD,EAXwB,KAWRC,EAXQ,OAYGrD,oBAAS,GAZZ,mBAYxBsD,EAZwB,KAYbC,EAZa,OAcCvD,oBAAS,GAdV,mBAcxBV,EAdwB,KAcdC,EAdc,KA6C/B,OAbA2B,qBAAU,WACQ,IAAD,EAAXoC,IACF,UAAAL,EAAaO,eAAb,SAAsBC,eAAe,CAAEC,SAAU,WACjDH,GAAa,MAGd,CAACxC,IAEJG,qBAAU,WACRiC,EAAWxE,GACX0E,GAAkB,KACjB,CAAC1E,IAGF,qBAAKhB,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,0BACA,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,YAAY8B,QAvBX,WACzBuB,EAASjC,MAsBD,SACE,cAAC,EAAD,CACEe,KAAsB,IAAhBnB,EAAoB,iBAAmB,mBAC7CgD,KAAK,WAGT,sBACEhE,UAAU,YACV8B,QAAS,WACPF,GAAY,SAACoE,GAAD,OAAWA,MAH3B,SAME,cAAC,EAAD,CAAQ7D,KAAK,eAAe6B,KAAK,iBAIvC,cAAC,EAAD,CACEZ,QAASA,EACTrC,MAAOA,EACPC,YAAaA,IAEdyE,GACC,sBACEzF,UAAU,8BACV8B,QA3Dc,WACtB8D,GAAa,GACb,IAAIK,EAAO7C,EAAUpC,EACjBD,GAASkF,EAAOlF,EAAMmF,QACxBD,EAAOlF,EAAMmF,OACbV,EAAWS,GACXP,GAAkB,IAElBF,EAAWS,IAiDP,SAIE,cAAC,EAAD,CAAQ9D,KAAK,YAAY6B,KAAK,WAGlC,qBAAKhE,UAAU,sBAAsBmG,IAAKb,IAC1C,cAAC,EAAD,CAAO3D,SAAUA,EAAUC,YAAaA,EAAxC,SACE,cAAC,EAAD,CACEA,YAAa,SAACD,GACZC,EAAYD,eC7EXyE,EAZO,WACpB,OACE,sBAAKpG,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqG,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,IAAD,CAAUrG,GAAG,aACjD,cAAC,IAAD,CAAOoG,KAAK,QAAQC,OAAQ,kBAAM,cAAC,EAAD,c,wBCPpCC,EAAcC,YAAgB,CAChCzB,KAAMzD,IAKKmF,EAFDC,YAAYH,EAAaI,YAAgBC,MCAvDC,IAASP,OACP,cAAC,IAAMQ,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,YAAzB,SACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINQ,SAASC,eAAe,W","file":"static/js/main.0ffb00ac.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Logo.scss\";\n\nconst Logo: React.FC = () => {\n    return (\n        <div className=\"logo\">\n            <p className=\"logo__text\">React Articles</p>\n        </div>\n    )\n}\n\nexport default Logo\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Nav.scss\";\n\nconst Nav: React.FC = () => {\n  return (\n    <nav className=\"nav\">\n      <ul className=\"nav__list\">\n        <li className=\"nav__item\">\n          <NavLink\n            className=\"nav__link\"\n            to=\"/home\"\n            activeClassName=\"nav__link--active\"\n          >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"nav__item\">\n          <NavLink\n            className=\"nav__link\"\n            to=\"/users\"\n            activeClassName=\"nav__link--active\"\n          >\n            Users\n          </NavLink>\n        </li>\n        <li className=\"nav__item\">\n          <NavLink\n            className=\"nav__link\"\n            to=\"/photos\"\n            activeClassName=\"nav__link--active\"\n          >\n            Photos\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport Logo from \"../Logo/Logo\";\nimport Nav from \"../Nav/Nav\";\nimport \"./Header.scss\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__inner\">\n          <Logo />\n          <Nav />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\n\nexport const instance = axios.create({\n    baseURL: \"https://jsonplaceholder.typicode.com/\"\n});\n","import { PostType } from \"../redux/homePage-reducer\";\nimport { instance } from \"./api\";\n\nexport const postsApi = {\n  getPosts: () => {\n    return instance.get<Array<PostType>>(\"posts\").then((resp) => resp.data);\n  },\n};\n","// State\n\nimport { ThunkAction } from \"redux-thunk\";\nimport { postsApi } from \"../api/posts-api\";\nimport { InferValueType, RootStateType } from \"./store\";\n\nconst initialState: InitialStateType = {\n  posts: [],\n  postsPerRow: 3,\n};\n\n// Actions\n\nconst POSTS_RECEIVED = \"articles/homePage/POSTS_RECEIVED\";\nconst POSTS_PER_ROW_CHANGED = \"articles/homePage/POSTS_PER_ROW_CHANGED\";\nconst POST_ADDED = \"articles/homePage/POST_ADDED\";\n\n// Action Creators\n\nexport const actions = {\n  postsReceived: (posts: Array<PostType>) =>\n    ({ type: POSTS_RECEIVED, posts } as const),\n  postsPerRowChanged: () => ({ type: POSTS_PER_ROW_CHANGED } as const),\n  postAdded: (payload: PostType) => ({ type: POST_ADDED, payload} as const),\n};\n\n// Reducer\n\nconst homePageReducer = (\n  state: InitialStateType = initialState,\n  action: ActionsType\n): InitialStateType => {\n  switch (action.type) {\n    case POST_ADDED:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload]\n      }\n      case POSTS_PER_ROW_CHANGED: \n        return {\n          ...state,\n          postsPerRow: (state.postsPerRow === 3) ? 1 : 3,\n        }\n      case POSTS_RECEIVED:\n          return {\n              ...state,\n              posts: [...action.posts]\n          }\n    default:\n      return state;\n  }\n};\n\n// Thunks\n\nexport const getPosts = (): ThunksType => {\n  return async (dispatch) => {\n    const resp = await postsApi.getPosts();\n    dispatch(actions.postsReceived(resp));\n  };\n};\n\nexport default homePageReducer;\n\n// Types\n\nexport type PostType = {\n  userId: number;\n  id: number;\n  title: string;\n  body: string;\n};\n\ntype InitialStateType = {\n  posts: Array<PostType>;\n  postsPerRow: 1 | 3,\n};\n\ntype ActionsType = ReturnType<InferValueType<typeof actions>>;\n\ntype ThunksType = ThunkAction<Promise<void>, RootStateType, {}, ActionsType>;\n","import React from \"react\";\nimport \"./Modal.scss\";\n\nconst Modal: React.FC<PropsType> = ({ isActive, setIsActive, children }) => {\n  return (\n    <div\n      className={`modal ${isActive && \"modal--active\"}`}\n      onClick={() => setIsActive(false)}\n    >\n      <div\n        className={`modal__content ${isActive && \"modal__content--active\"}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n\n// Types\n\ntype PropsType = {\n  isActive: boolean;\n  setIsActive: (isActive: boolean) => void;\n};\n","import React, { useState } from \"react\";\nimport { PostType } from \"../../redux/homePage-reducer\";\nimport Modal from \"../Modal/Modal\";\nimport \"./ArticleItem.scss\";\n\nconst ArticleItem: React.FC<PropsType> = ({\n  title,\n  text,\n  postsPerRow,\n  post,\n}) => {\n  const [isInfoActive, setIsInfoActive] = useState(false);\n  const [isColorActive, setIsColorActive] = useState(false);\n  const [color, setColor] = useState<\"#ccc\" | \"#c6baba\" | \"#bcc6ba\">(\"#ccc\");\n\n  const styles = {\n    maxWidth: postsPerRow === 3 ? \"376px\" : \"100%\",\n    backgroundColor: color,\n  };\n\n  return (\n    <div className=\"article-item\" style={styles}>\n      <h4 className=\"article-item__title\">{title}</h4>\n      <p className=\"article-item__text\">{text}</p>\n      <div className=\"article-item__buttons\">\n        <button\n          className=\"article-item__btn\"\n          onClick={() => {\n            setIsInfoActive(true);\n          }}\n        >\n          View\n        </button>\n        <button\n          className=\"article-item__btn\"\n          onClick={() => {\n            setIsColorActive(true);\n          }}\n        >\n          Change Color\n        </button>\n      </div>\n      <Modal isActive={isInfoActive} setIsActive={setIsInfoActive}>\n        <div className=\"info-modal\">\n          <h6 className=\"info-modal__title\">Article Info</h6>\n          <div className=\"info-modal__content\">\n            <h4 className=\"info-modal__content-title\">{post.title}</h4>\n            <p className=\"info-modal__content-text\">{post.body}</p>\n          </div>\n        </div>\n      </Modal>\n      <Modal isActive={isColorActive} setIsActive={setIsColorActive}>\n        <div className=\"color-modal\">\n          <ul className=\"color-modal__list\">\n            <li\n              className=\"color-modal__item color-modal__item--grey\"\n              onClick={() => {\n                setColor(\"#ccc\");\n              }}\n            >\n              default\n            </li>\n            <li\n              className=\"color-modal__item color-modal__item--red\"\n              onClick={() => {\n                setColor(\"#c6baba\");\n              }}\n            >\n              red\n            </li>\n            <li\n              className=\"color-modal__item color-modal__item--green\"\n              onClick={() => {\n                setColor(\"#bcc6ba\");\n              }}\n            >\n              green\n            </li>\n          </ul>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default React.memo(ArticleItem);\n\n// Types\n\ntype PropsType = {\n  title: string;\n  text: string;\n  postsPerRow: number;\n  post: PostType;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getPosts, PostType } from \"../../redux/homePage-reducer\";\nimport ArticleItem from \"../ArticleItem/ArticleItem\";\nimport \"./ArticleItems.scss\";\n\nconst ArticleItems: React.FC<PropsType> = ({ visible, posts, postsPerRow }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const mappedPosts = posts\n    ?.slice(0, visible)\n    .map((p) => <ArticleItem key={p.id} post={p} title={p.title} text={p.body} postsPerRow={postsPerRow}/>);\n\n  const styles = {\n    gridTemplateColumns: `repeat(${postsPerRow}, 1fr)`\n  }\n\n  return <div\n   className=\"article-items\"\n    style={styles}\n  >{mappedPosts}</div>;\n};\n\nexport default React.memo(ArticleItems);\n\n// Types\n\ntype PropsType = {\n  visible: number;\n  posts: Array<PostType> | null;\n  postsPerRow: number;\n};\n","import React from 'react'\nimport \"./Button.scss\";\n\nconst Button: React.FC<PropsType> = ({text, size=\"18px\"}) => {\n\n    const style = {\n        fontSize: size,\n    }\n\n    return <button className=\"button\" style={style} >{text}</button>\n}\n\nexport default Button\n\n// Types\n\ntype PropsType = {\n    text: string;\n    size?: string;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions, PostType } from \"../../redux/homePage-reducer\";\nimport Button from \"../Button/Button\";\nimport \"./NewArticle.scss\";\n\nconst NewArticle: React.FC<PropsType> = ({setIsActive}) => {\n\n  const dispatch = useDispatch();\n\n  const [tempTitle, setTempTitle] = useState(\"\");\n  const [tempDescription, setTempDescription] = useState(\"\");\n  const [title, setTitle] = useState<string | null>(null);\n  const [description, setDescription] = useState<string | null>(null);\n\n  const titleChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTempTitle(e.currentTarget.value);\n  };\n  const descriptionChangeHandler = (\n    e: React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    setTempDescription(e.currentTarget.value);\n  };\n  const submitHandler = () => {\n    setTitle(tempTitle);\n    setDescription(tempDescription);\n  };\n\n  useEffect(() => {\n    if (title && description) {\n      const post: PostType = {\n        userId: 1,\n        id: 1,\n        title: title,\n        body: description,\n      };\n      dispatch(actions.postAdded(post));\n      setIsActive(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [title, description]);\n\n  return (\n    <div className=\"new-article\">\n      <div className=\"new-article__inner\">\n        <input\n          type=\"text\"\n          className=\"new-article__title\"\n          placeholder=\"title\"\n          value={tempTitle}\n          onChange={titleChangeHandler}\n        />\n        <textarea\n          className=\"new-article__body\"\n          placeholder=\"description\"\n          value={tempDescription}\n          onChange={descriptionChangeHandler}\n        />\n        <span className=\"new-article__create\" onClick={submitHandler}>\n          <Button text=\"Create\" size=\"16px\" />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default NewArticle;\n\n// Types\n\ntype PropsType = {\n    setIsActive: (isActive: boolean) => void,\n}\n","import { RootStateType } from \"./store\"\n\nexport const selectPosts = (state: RootStateType) => {\n    return state.home.posts;\n}\n\nexport const selectPostsPerRow = (state: RootStateType) => {\n    return state.home.postsPerRow;\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ArticleItems from \"../../components/ArticleItems/ArticleItems\";\nimport Button from \"../../components/Button/Button\";\nimport Modal from \"../../components/Modal/Modal\";\nimport NewArticle from \"../../components/NewArticle/NewArticle\";\nimport { actions } from \"../../redux/homePage-reducer\";\nimport { selectPosts, selectPostsPerRow } from \"../../redux/homePage-selectors\";\nimport \"./HomePage.scss\";\n\nconst HomePage: React.FC = () => {\n  console.log(\"HomePage\");\n\n  const posts = useSelector(selectPosts);\n  const postsPerRow = useSelector(selectPostsPerRow);\n\n  const dispatch = useDispatch();\n\n  const scrollTarget = useRef<HTMLDivElement>(null);\n\n  const [visible, setVisible] = useState<number>(postsPerRow);\n  const [showMoreActive, setShowMoreActive] = useState(true);\n  const [isClicked, setIsClicked] = useState(false);\n  // Modal States\n  const [isActive, setIsActive] = useState(false);\n\n  const showMoreHandler = () => {\n    setIsClicked(true);\n    let next = visible + postsPerRow;\n    if (posts && next > posts.length) {\n      next = posts.length;\n      setVisible(next);\n      setShowMoreActive(false);\n    } else {\n      setVisible(next);\n    }\n  };\n\n  const postsPerRowHandler = () => {\n    dispatch(actions.postsPerRowChanged());\n  };\n\n  useEffect(() => {\n    if (isClicked) {\n      scrollTarget.current?.scrollIntoView({ behavior: \"smooth\" });\n      setIsClicked(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible]);\n\n  useEffect(() => {\n    setVisible(postsPerRow);\n    setShowMoreActive(true);\n  }, [postsPerRow]);\n\n  return (\n    <div className=\"home\">\n      <div className=\"container\">\n        <div className=\"home__top\">\n          <h2 className=\"home__title\">Article list</h2>\n          <div className=\"home__buttons\">\n            <span className=\"home__btn\" onClick={postsPerRowHandler}>\n              <Button\n                text={postsPerRow === 3 ? \"Make big cards\" : \"Make small cards\"}\n                size=\"16px\"\n              />\n            </span>\n            <span\n              className=\"home__btn\"\n              onClick={() => {\n                setIsActive((prev) => !prev);\n              }}\n            >\n              <Button text=\"Add articles\" size=\"16px\" />\n            </span>\n          </div>\n        </div>\n        <ArticleItems\n          visible={visible}\n          posts={posts}\n          postsPerRow={postsPerRow}\n        />\n        {showMoreActive && (\n          <span\n            className=\"home__btn home__btn--center\"\n            onClick={showMoreHandler}\n          >\n            <Button text=\"Show more\" size=\"18px\" />\n          </span>\n        )}\n        <div className=\"home__scroll-target\" ref={scrollTarget}></div>\n        <Modal isActive={isActive} setIsActive={setIsActive}>\n          <NewArticle\n            setIsActive={(isActive: boolean) => {\n              setIsActive(isActive);\n            }}\n          />\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport Header from \"./components/Header/Header\";\nimport HomePage from \"./pages/HomePage/HomePage\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\n        <Route path=\"/home\" render={() => <HomePage />} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport ThunkMiddleware from \"redux-thunk\";\nimport homePageReducer from \"./homePage-reducer\";\n\nconst rootReducer = combineReducers({\n    home: homePageReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(ThunkMiddleware));\n\nexport default store;\n\n// Types\n\nexport type RootStateType = ReturnType<typeof rootReducer>\nexport type InferValueType<T> = T extends {[key: string]: infer U} ? U : never;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}